// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Summary should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Summary
    film={
        Object {
            "homeworld": "Tatooine",
            "name": "Cat",
            "population": "5",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <aside
        className="summary"
>
        <div
                className="movement"
        >
                <h3
                        className="title"
                />
                <p>
                        Episode: 
                </p>
                <p />
                <p />
        </div>
</aside>,
      "className": "summary-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="movement"
>
          <h3
                    className="title"
          />
          <p>
                    Episode: 
          </p>
          <p />
          <p />
</div>,
        "className": "summary",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3
              className="title"
/>,
            <p>
              Episode: 
</p>,
            <p />,
            <p />,
          ],
          "className": "movement",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "title",
            },
            "ref": null,
            "rendered": null,
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Episode: ",
                undefined,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Episode: ",
              undefined,
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "aside",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <aside
          className="summary"
>
          <div
                    className="movement"
          >
                    <h3
                              className="title"
                    />
                    <p>
                              Episode: 
                    </p>
                    <p />
                    <p />
          </div>
</aside>,
        "className": "summary-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="movement"
>
            <h3
                        className="title"
            />
            <p>
                        Episode: 
            </p>
            <p />
            <p />
</div>,
          "className": "summary",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="title"
/>,
              <p>
                Episode: 
</p>,
              <p />,
              <p />,
            ],
            "className": "movement",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "title",
              },
              "ref": null,
              "rendered": null,
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Episode: ",
                  undefined,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Episode: ",
                undefined,
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
          ],
          "type": "div",
        },
        "type": "aside",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
