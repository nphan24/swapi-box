// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardContainer should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardContainer
    info={
        Array [
            Object {
              "homeworld": "Tatooine",
              "name": "Cat",
              "population": "5",
            },
          ]
    }
    setFavorites={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Switch>
        <Route
                component={[Function]}
                path="/people"
        />
        <Route
                component={[Function]}
                exact={true}
                path="/planets"
        />
        <Route
                component={[Function]}
                path="/vehicles"
        />
        <Route
                component={[Function]}
                exact={true}
                path="/favorites"
        />
</Switch>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Route
            component={[Function]}
            path="/people"
/>,
          <Route
            component={[Function]}
            exact={true}
            path="/planets"
/>,
          <Route
            component={[Function]}
            path="/vehicles"
/>,
          <Route
            component={[Function]}
            exact={true}
            path="/favorites"
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/people",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/planets",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/vehicles",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/favorites",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Switch>
          <Route
                    component={[Function]}
                    path="/people"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/planets"
          />
          <Route
                    component={[Function]}
                    path="/vehicles"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/favorites"
          />
</Switch>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              component={[Function]}
              path="/people"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/planets"
/>,
            <Route
              component={[Function]}
              path="/vehicles"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/favorites"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/people",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/planets",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/vehicles",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/favorites",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
